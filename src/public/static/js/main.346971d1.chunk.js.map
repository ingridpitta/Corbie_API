{"version":3,"sources":["assets/images/Logo.svg","templates/MasterTemplate/MasterTemplate.js","components/atoms/Button/Button.js","components/atoms/Input/Input.js","components/atoms/NewInput/NewInput.style.js","components/atoms/NewInput/NewInput.js","components/atoms/Text/Text.js","components/atoms/DatePicker/DatePicker.js","components/atoms/InputNumber/InputNumber.js","components/atoms/InputValor/InputValor.js","components/atoms/Select/Select.js","components/atoms/Table/Table.js","components/atoms/TableTask/TableTask.js","components/atoms/Modal/Modal.js","components/atoms/ModalTask/ModalTask.js","components/atoms/ModalEditTask/ModalEditTask.js","components/atoms/CheckBox/CheckBox.js","components/molecules/HomeView/HomeView.js","components/molecules/FormLogin/FormLogin.schema.js","components/molecules/FormLogin/FormLogin.style.js","api/Service.js","components/molecules/FormLogin/FormLogin.js","components/molecules/FormSignup/FormSignup.schema.js","components/molecules/FormSignup/FormSignup.style.js","components/molecules/FormSignup/FormSignup.js","components/molecules/FormEdit/FormEdit.schema.js","components/molecules/FormEdit/FormEdit.style.js","components/molecules/FormEdit/FormEdit.js","components/molecules/FormProjectCreate/FormProjectCreate.schema.js","components/molecules/FormProjectCreate/FormProjectCreate.style.js","components/molecules/FormProjectCreate/FormProjectCreate.js","components/molecules/FormProjectEdit/FormProjectEdit.schema.js","components/molecules/FormProjectEdit/FormProjectEdit.style.js","components/molecules/FormProjectEdit/FormProjectEdit.js","components/molecules/ProjectView/ProjectView.js","components/molecules/FormTaskCreate/FormTaskCreate.schema.js","components/molecules/FormTaskCreate/FormTaskCreate.style.js","components/molecules/FormTaskCreate/FormTaskCreate.js","components/molecules/FormTaskEdit/FormTaskEdit.schema.js","components/molecules/FormTaskEdit/FormTaskEdit.style.js","components/molecules/FormTaskEdit/FormTaskEdit.js","components/molecules/TaskView/TaskView.js","pages/Login/Login.js","pages/Home/Home.js","pages/SignUp/Signup.js","pages/Edit/Edit.js","pages/ProjectEdit/ProjectEdit.js","pages/Project/Project.js","pages/TaskEdit/TaskEdit.js","pages/Task/Task.js","components/organisms/DashboardView/DashboardView.js","pages/DashBoard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","Header","Layout","Content","Footer","MasterTemplate","children","loggedUser","logout","style","backgroundColor","position","zIndex","to","className","marginTop","theme","mode","defaultSelectedKeys","Item","icon","SubMenu","onClick","padding","margin","textAlign","minHeight","Button","isLoading","method","type","loading","htmlType","Component","Form","InputBase","styled","InputText","InputAntd","InputMasked","InputWithMask","NewInput","name","label","mask","value","handleChange","handleBlur","placeholder","error","hasMask","hasError","hasTouched","touched","validateStatus","help","maskChar","defaultValue","disabled","onChange","onBlur","Text","styles","join","DatePicker","setFieldValue","format","date","moment","showToday","InputNumber","number","min","InputValor","valor","formatter","replace","parser","decimalSeparator","Select","displayValue","filter","data","htmlFor","defaultActiveFirstOption","map","option","Table","columns","dataSource","projects","TableTask","tasks","Modal","display","flexDirection","justifyContent","background","borderColor","borderRadius","boxShadow","showModal","visible","onCancelVisible","onOk","handleOk","onCancel","footer","React","ModalTask","ModalEditTask","HomeView","state","formloginSchema","yup","shape","username","required","max","password","FormWrapper","Formik","interceptorApi","axios","create","baseURL","process","subscribeUser","values","a","api","post","message","loginUser","getUserInfo","get","user","updateUserInfo","console","log","put","deleteUser","delete","listAllProjects","getProjectInfo","id","project","createProject","updateProject","deleteProject","listAllTasksFromProject","getTaskInfo","task","createTask","updateTask","deleteTask","interceptors","request","use","config","url","includes","tokenInfo","JSON","parse","localStorage","getItem","window","location","token","refresh_token","headers","Authorization","response","status","setItem","stringify","removeItem","FormLogin","onSubmitMethod","actions","ApiService","logged","logUser","setSubmitting","history","push","setState","loginApiErrorMessage","initialState","initialValues","validationSchema","onSubmit","handleSubmit","isSubmitting","errors","formsignupSchema","email","FormSignup","action","formeditSchema","currentPassword","newPassword","confirmationNewPassword","FormEdit","isUserInfoLoaded","enableReinitialize","active","formprojectcreateSchema","description","hourPrice","duration","cost","creationDate","dueDate","FormProjectCreate","getData","options","formprojecteditSchema","FormProjectEdit","ProjectView","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","node","searchInput","e","onPressEnter","handleSearch","marginBottom","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","handleCancel","_id","EditOutlined","DeleteOutlined","formtaskcreateSchema","profitable","FormTaskCreate","loadTasks","formtaskeditSchema","FormTaskEdit","task_id","TaskView","showEditTask","attributes","editTask","closeEditTask","Login","Signup","Edit","userInfo","ProjectEdit","Project","getProjectInfos","projectInfos","pathname","item","loadOptions","loadProjects","componentDidMount","TaskEdit","Task","DashboardView","Dashboard","App","verifyLoggedUser","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.346971d1.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M87.663 47.0769C86.46 42.9279 82.195 41.4499 78.615 39.9239C74.063 37.9839 72.478 34.5129 68.833 31.4639C65.048 28.2969 60.527 26.1949 56.293 23.7219C52.696 21.6209 49.724 19.1119 46.03 17.2519C43.859 16.1589 41.68 15.0729 39.429 14.1529C36.962 13.1449 36.588 12.1389 35.35 9.81194C33.433 6.20894 31.195 2.43994 27.181 0.920938C22.57 -0.823061 18.355 1.40094 13.741 1.04694C8.482 0.641939 3.443 0.999939 0 5.54494C0.433 5.73694 2.328 4.99294 2.804 4.92194C5.164 4.56594 7.595 4.58394 9.96 4.87194C12.202 5.14494 14.532 5.66594 16.502 6.81494C11.239 5.05794 5.141 5.38794 0.112 7.11994C4.594 8.77394 9.561 8.92994 14.235 9.71894C16.338 13.1819 18.081 14.7129 17.52 19.1319C17.234 21.3829 15.974 23.7049 17.027 25.9359C18.095 28.1999 20.204 29.8499 21.105 32.2049C22.875 36.8309 26.12 39.8719 29.937 42.8399C33.492 45.6049 37.818 51.0439 38.516 55.5999C38.327 55.5969 35.601 61.4579 35.09 62.1919C33.651 64.2599 31.155 68.8819 28.472 68.9889C25.835 69.0939 20.471 68.1179 19.586 71.5879C20.488 70.8959 21.277 70.2439 22.427 70.3189C21.548 70.6409 20.839 71.3579 20.795 72.3139C23.315 70.2299 27.93 71.1049 30.921 71.1079C33.776 71.1109 37.054 68.2869 39.414 70.7419C38.91 67.3469 33.389 70.1009 34.848 66.5419C35.747 64.3499 38.683 62.1669 39.261 60.1689C39.966 59.6889 43.072 55.9649 43.23 55.9629C44.055 52.3279 41.504 49.9239 41.054 46.5329C42.222 48.0429 44.312 47.5169 45.857 48.2389C47.335 48.9289 48.445 51.2379 49.103 52.6189C50.356 55.2519 50.867 59.3739 50.152 62.1769C49.127 66.1949 47.082 71.1219 42.822 72.3309C40.189 73.0789 35.571 71.8399 34.88 75.6399C37.116 73.8799 39.951 74.0079 42.799 74.0079C40.855 75.0959 35.371 74.8899 35.485 77.7559C36.107 76.4349 36.697 76.7239 37.887 76.8799C40.05 77.1629 42.089 75.6459 44.069 75.0349C46.61 74.2509 51.574 72.8749 52.713 76.3049C52.883 74.3849 51.882 73.6579 50.356 72.8459C48.866 72.0529 48.419 72.1489 49.199 70.4449C50.031 68.6279 51.025 66.8899 51.997 65.1459C53.115 63.1399 55.537 60.0969 55.686 57.7759C55.846 55.2829 53.893 50.7919 52.842 48.5279C54.447 48.8659 56.206 49.1529 57.823 48.7059C58.554 48.5099 59.19 48.1489 59.733 47.6209C61.346 47.6909 62.959 47.7729 64.57 47.8829C69.206 48.1999 73.878 48.7149 78.363 49.9809C81.758 50.9379 84.544 52.0919 87.948 52.5239C89.571 52.7299 90.015 52.3689 91.743 53.0239C93.701 53.7669 95.944 54.3289 97.999 53.6069C94.246 51.7379 92.163 48.1989 87.663 47.0769ZM20.129 5.81694C18.206 5.81694 18.206 3.15694 20.129 3.15694C22.053 3.15694 22.053 5.81694 20.129 5.81694Z\",\n  fill: \"#D3D3D3\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 98,\n    height: 78,\n    viewBox: \"0 0 98 78\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Logo.4366896e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport './MasterTemplate.css';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as Logo } from '../../assets/images/Logo.svg';\n\nconst { Header, Content, Footer } = Layout;\n// const { SubMenu } = Menu;\n\nconst MasterTemplate = ({children, loggedUser, logout, ...props\n}) => {\n  return (\n    <Layout>\n      <Header style={{ backgroundColor: '#4A4A48', position: 'fixed', zIndex: 1, width: '100%' }}>\n\n        <Link to=\"/\" className=\"logo\">\n          <Logo style={{marginTop:'-10px', width: '50px'}} />\n        </Link>\n\n        {loggedUser ? (\n          <Menu theme=\"dark\" style={{backgroundColor: '#4A4A48'}} mode=\"horizontal\" defaultSelectedKeys={['0']}>\n            <Menu.Item key=\"1\" icon={\"\"}>\n              <Link to=\"/dashboard\" >\n                Dashboard\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={\"\"}>\n              <Link to=\"/edit\">\n                Perfil\n              </Link>\n            </Menu.Item>\n            <Menu.SubMenu {...props} icon={\"\"} title=\"Projetos \">\n              <Menu.Item key=\"create-project\">\n                <Link to=\"/create-project\">\n                  Criar projeto\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"project\">\n                <Link to=\"/project\">\n                  Visualizar Projetos\n                </Link>\n              </Menu.Item>\n            </Menu.SubMenu>\n            <Menu.Item key=\"logout\" onClick={logout}>\n              <Link to=\"/login\">\n                Logout\n              </Link>\n            </Menu.Item>\n          </Menu>\n        ) : (\n          <Menu theme=\"dark\" style={{backgroundColor: '#4A4A48'}} mode=\"horizontal\" defaultSelectedKeys={['0']}>\n            <Menu.Item key=\"1\">\n              <Link to=\"/signup\">\n                Signup\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to=\"/login\">\n                Login\n              </Link>\n            </Menu.Item>\n          </Menu>\n        )}\n\n      </Header>\n      <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n        <Breadcrumb style={{ margin: '16px 0', textAlign:'left' }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n          <Breadcrumb.Item>App</Breadcrumb.Item>\n        </Breadcrumb>\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n          {children}\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}> </Footer>\n    </Layout>\n  );\n};\n\nexport default MasterTemplate;\n","import React from 'react';\nimport { Button as  ButtonMaster} from 'antd';\n\nconst Button = ({isLoading, children, method, type}) => (\n  <ButtonMaster\n    type=\"primary\"\n    loading={isLoading}\n    htmlType={type || 'Button'}\n    onClick={() => method && method()}\n  >\n    {children}\n  </ButtonMaster>\n);\nexport default Button;","import React, { Component } from 'react';\nimport { Input as InputAntD } from 'antd';\n\nclass Input extends Component {\n    state = {\n      value: '',\n    };\n\nonChange = e => {\n    this.setState({\n        value: e.target.value,\n    }, () => {\n        this.props.filterMethod(this.state.value);\n    });\n}\n\nrender(){\n    const { placeholder, type, name } = this.props;\n\n    return (\n        <div>\n            <InputAntD\n             placeholder={placeholder} \n             type={type} \n             value={this.state.value} \n             name={name} \n             onChange={ (e) => this.onChange(e)} />\n        </div>\n     );\n    }\n}\n\nexport default Input;","import styled from 'styled-components';\nimport { Form, Input as InputAntd} from 'antd';\nimport InputWithMask from 'react-input-mask';\n\nconst { Item } = Form;\n\nexport const InputBase = styled(Item)``;\n\nexport const InputText = styled(InputAntd)``;\n\nexport const InputMasked = styled(InputWithMask)``;\n","import React from 'react';\nimport { InputBase, InputText, InputMasked } from './NewInput.style';\n\nconst NewInput = ({\nname, label, mask, value, type, isLoading, handleChange, handleBlur, placeholder, error, touched,\n}) => {\n  const hasMask = !!mask;\n  const hasError = !!error;\n  const hasTouched = touched;\n\n  return (\n    <InputBase\n      name={name}\n      label={label}\n      validateStatus={hasError && hasTouched && 'error'}\n      help={hasError && hasTouched && error}\n    >\n      {hasMask ? (\n\n        <InputMasked\n          className=\"ant-input\"\n          mask={mask}\n          maskChar={null}\n          defaultValue={value}\n          value={value}\n          disabled={isLoading}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder={placeholder}\n        />\n      ) : (\n        <InputText\n          defaultValue={value}\n          value={value}\n          disabled={isLoading}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder={placeholder}\n          type={type || 'text'}\n        />\n\n      )}\n    </InputBase>\n  );\n};\n\nexport default NewInput;\n","import React from 'react';\nimport './Text.css';\n\nconst Text = ({ children, styles }) => <p className={styles && styles.join(' ')}>{children}</p>;\n\nexport default Text;\n","import React from 'react';\nimport { DatePicker as DateMaster } from 'antd';\nimport moment from 'moment';\n\nconst dateFormat = 'DD/MM/YYYY';\n\n\nconst DatePicker = ({name, label, placeholder, value, isLoading, onChange, handleBlur, setFieldValue}) => {\nconst onChangeDate = (date) => {\n    // onChange(date);\n    setFieldValue(name, date);\n}\n  return (\n    <div>\n      <span>{label}</span>\n      <DateMaster\n        name={name}\n        placeholder={placeholder}\n        format={dateFormat}\n        value={value}\n      // disabled={isLoading}\n        onChange={onChangeDate}\n      // onBlur={handleBlur}\n        defaultValue={moment(value, dateFormat)}\n        showToday\n      />\n    </div>\n  );\n};\nexport default DatePicker;\n","import React from 'react';\nimport { InputNumber as InputNumberMaster } from 'antd';\n\n\nconst InputNumber = ({name, label, placeholder, value, isLoading, onChange, handleBlur, setFieldValue}) => {\nconst onChangeNumber = (number) => {\n    // onChange(date);\n    setFieldValue(name, number);\n}\n  return (\n    <div>\n      <span>{label}</span>\n      <InputNumberMaster\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        // disabled={isLoading}\n        onChange={onChangeNumber}\n        // onBlur={handleBlur}\n        defaultValue={0}\n        min={0}\n      />\n    </div>\n  );\n};\nexport default InputNumber;\n","import React from 'react';\nimport { InputNumber as InputValorMaster } from 'antd';\n\n\nconst InputValor = ({name, label, placeholder, value, isLoading, onChange, handleBlur, setFieldValue}) => {\nconst onChangeValor = (valor) => {\n    // onChange(date);\n    setFieldValue(name, valor);\n}\n  return (\n    <div>\n      <span>{label}</span>\n      <InputValorMaster\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        // disabled={isLoading}\n        onChange={onChangeValor}\n        // onBlur={handleBlur}\n        defaultValue={0}\n        min={0}\n        formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n        decimalSeparator={\".\"}\n      />\n    </div>\n  );\n};\nexport default InputValor;\n","import React from \"react\";\nimport { Select as SelectMaster } from \"antd\";\n\nconst Select = ({\n  value,\n  displayValue,\n  handleChange,\n  filter,\n  name,\n  label,\n  placeholder,\n  isLoading,\n  onChange,\n  handleBlur,\n  setFieldValue,\n  data,\n  ...props\n}) => {\n  return (\n    <div>\n      <label htmlFor={value}>{label}</label>\n      <SelectMaster\n        style={{ width: \"100%\" }}\n        defaultActiveFirstOption\n        placeholder={placeholder}\n        onChange={handleChange}\n      >\n        {data.map(option => (\n          <option value={option.value} displayValue={option.displayValue}>\n            {option.value}\n          </option>\n        ))}\n      </SelectMaster>\n    </div>\n  );\n};\nexport default Select;\n","import React, { Component } from 'react';\nimport { Table as TableMaster } from 'antd';\n\n\nclass Table extends Component {\n\n  render() {\n\n    return (\n      <>\n        <TableMaster columns={this.props.columns} dataSource={this.props.projects} onChange={this.handleChange} />\n      </>\n    );\n  }\n}\n\n\nexport default Table;\n","import React, { Component } from 'react';\nimport { Table as TableTaskMaster } from 'antd';\n\n\n\nclass TableTask extends Component {\n\n  render() {\n\n    return (\n      <>\n        <TableTaskMaster columns={this.props.columns} dataSource={this.props.tasks} onChange={this.handleChange} />\n      </>\n    );\n  }\n}\n\n\nexport default TableTask;\n","import React from 'react';\nimport { Modal as ModalMaster, Button } from 'antd';\n// import { FormProjectCreate } from '../../molecules';\n\nclass Modal extends React.Component {\n\n  render() {\n\n    return (\n      <div>\n        <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"flex-end\"}} >\n        <Button type=\"primary\" style={{ background: \"#595959\", borderColor: \"#595959\", borderRadius:\"6px\", boxShadow:\"3px 3px 3px gray\" }} onClick={this.props.showModal}>\n          Novo Projeto\n        </Button>\n        </div>\n\n        <ModalMaster\n          visible={this.props.onCancelVisible}\n          title=\"Cadastre seu Projeto\"\n          onOk={this.props.handleOk}\n          onCancel={this.props.onCancel}\n          footer={[\n            // <Button key=\"submit\" type=\"primary\" style={{ background: \"#595959\", borderColor: \"#595959\", borderRadius:\"6px\", boxShadow:\"3px 3px 3px gray\"}} loading={loading} onClick={this.handleOk}>\n            //   Cadastrar\n            // </Button>,\n          ]}\n        >\n          {this.props.children}\n        </ModalMaster>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport { Modal as ModalMasterTask, Button } from 'antd';\n\n\nclass ModalTask extends React.Component {\n\n  render() {\n\n    return (\n      <div>\n        \n        <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"flex-end\"}} >\n        <Button type=\"primary\" style={{ background: \"#595959\", borderColor: \"#595959\", borderRadius:\"6px\", boxShadow:\"3px 3px 3px gray\" }} onClick={this.props.showModal}>\n          Nova Tarefa\n        </Button>\n        </div>\n\n        <ModalMasterTask\n          visible={this.props.onCancelVisible}\n          title=\"Cadastre sua Tarefa\"\n          onOk={this.props.handleOk}\n          onCancel={this.props.onCancel}\n          footer={[\n            // <Button key=\"submit\" type=\"primary\" style={{ background: \"#595959\", borderColor: \"#595959\", borderRadius:\"6px\", boxShadow:\"3px 3px 3px gray\"}} loading={loading} onClick={this.handleOk}>\n            //   Cadastrar\n            // </Button>,\n          ]}\n        >\n  {this.props.children}\n        </ModalMasterTask>\n      </div>\n    );\n  }\n}\n\nexport default ModalTask;\n","import React from 'react';\nimport { Modal as ModalMasterTask, Button } from 'antd';\n\n\nclass ModalEditTask extends React.Component {\n\n  render() {\n\n    return (\n      <div>\n\n        <ModalMasterTask\n          visible={this.props.onCancelVisible}\n          title=\"Edite a sua Tarefa\"\n          onOk={this.props.handleOk}\n          onCancel={this.props.onCancel}\n          footer={[\n            // <Button key=\"submit\" type=\"primary\" style={{ background: \"#595959\", borderColor: \"#595959\", borderRadius:\"6px\", boxShadow:\"3px 3px 3px gray\"}} loading={loading} onClick={this.handleOk}>\n            //   Cadastrar\n            // </Button>,\n          ]}>\n          \n  {this.props.children}\n        </ModalMasterTask>\n      </div>\n    );\n  }\n}\n\nexport default ModalEditTask;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Checkbox as CheckBoxMaster } from 'antd';\n\nclass Checkbox extends React.Component {\n  // state = {\n  //   checked: true,\n  //   disabled: false,\n  // };\n\n  // toggleChecked = () => {\n  //   this.setState({ checked: !this.state.checked });\n  // };\n\n  // toggleDisable = () => {\n  //   this.setState({ disabled: !this.state.disabled });\n  // };\n\n  onChange = e => {\n    console.log('checked = ', e.target.checked);\n    this.setState({\n      checked: e.target.checked,\n    });\n  };\n\n  render() {\n    // const label = `${this.state.checked ? 'Checked' : 'Unchecked'}-${\n    //   this.state.disabled ? 'Disabled' : 'Enabled'\n    // }`;\n    return (\n      <div>\n        {/* <p style={{ marginBottom: '20px' }}> */}\n          <CheckBoxMaster\n            checked={this.state.checked}\n            disabled={this.state.disabled}\n            onChange={this.onChange}\n          >\n            {/* {label} */}\n          </CheckBoxMaster>\n        {/* </p> */}\n        {/* <p>\n          <Button type=\"primary\" size=\"small\" onClick={this.toggleChecked}>\n            {!this.state.checked ? 'Check' : 'Uncheck'}\n          </Button>\n          <Button\n            style={{ margin: '0 10px' }}\n            type=\"primary\"\n            size=\"small\"\n            onClick={this.toggleDisable}\n          >\n            {!this.state.disabled ? 'Disable' : 'Enable'}\n          </Button>\n        </p> */}\n      </div>\n    );\n  }\n}\n\nexport default Checkbox","import React, { Component } from 'react';\nimport { Text } from '../../atoms';\n\nclass HomeView extends Component {\n    state = {\n        \n    }\n    render(){\n        return(\n<Text>Home View</Text>\n        )\n    }\n}\n\nexport default HomeView;","import * as yup from 'yup';\n\nconst formloginSchema = yup.object().shape({\n  username: yup.string()\n    .required('Campo obrigatório')\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(20, 'Máximo de 20 caracteres'),\n  password: yup.string()\n    .required('Campo obrigatório')\n    .min(5, 'Mínimo de 5 caracteres')\n    .max(60, 'Máximo de 60 caracteres'),\n});\n\nexport default formloginSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\nexport const FormWrapper = styled(Formik)``;\n\nexport default FormWrapper;\n","import axios from \"axios\";\nconst interceptorApi = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n})\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL\n    });\n\n    this.api.interceptors.request.use(async config => {\n      if (config.url.includes(\"public\")) return config;\n\n      const tokenInfo = JSON.parse(localStorage.getItem(\"logged-user-info\"));\n\n      if (!tokenInfo) {\n        window.location = \"/login\";\n\n        return;\n      }\n\n      const { type, token, refresh_token } = tokenInfo;\n      try {\n        await interceptorApi.get(\"/api/private/verify-token\", {\n          headers: { Authorization: `${type} ${token}` }\n        });\n\n        config.headers.Authorization = `${type} ${token}`;\n        return config;\n      } catch (error) {\n        const { message } = error.response.data;\n        const { status } = error.response;\n\n        if (\n          status === 401 &&\n          (message === \"jwt expired\" || message === \"Token not found\")\n        ) {\n          try {\n            const { data } = await interceptorApi.get(\"/api/private/refresh-token\", {\n              headers: { Authorization: `${type} ${refresh_token}` }\n            });\n\n            localStorage.setItem(\"logged-user-info\", JSON.stringify(data));\n\n            config.headers.Authorization = `${data.type} ${data.token}`;\n\n            return config;\n          } catch (error) {\n            localStorage.removeItem(\"logged-user-info\");\n\n            window.location = \"/login\";\n\n            return;\n          }\n        }\n      }\n      return config;\n    });\n  }\n\n  //User\n  subscribeUser = async values => {\n    const { data } = await this.api.post(\"/api/public/auth/signup\", values);\n\n    return data || data.message;\n  };\n\n  loginUser = async values => {\n    const { data } = await this.api.post(\"/api/public/auth/login\", values);\n\n    return data;\n  };\n\n  getUserInfo = async () => {\n    const { data } = await this.api.get(\"/api/private/user\");\n\n    return data.user || {};\n  };\n\n  updateUserInfo = async values => {\n    console.log(values)\n    const { data } = await this.api.put(\"/api/private/user\", values);\n\n    return data || data.message;\n  };\n\n  deleteUser = async () => {\n    const { data } = await this.api.delete(\"/api/private/user\");\n\n    return data.message || {};\n  };\n\n  //Project\n  listAllProjects = async () => {\n    const { data } = await this.api.get(\"/api/private/projects\");\n\n    return data.projects || {};\n  };\n\n  getProjectInfo = async id => {\n    const { data } = await this.api.get(`/api/private/project/${id}`);\n\n    return data.project || {};\n  };\n\n  createProject = async values => {\n    const { data } = await this.api.post(\"/api/private/project\", values);\n\n    return data.project || {};\n  };\n\n  updateProject = async (id, values) => {\n    const { data } = await this.api.put(`/api/private/project/${id}`, values);\n\n    return data.project || {};\n  };\n\n  deleteProject = async id => {\n    const { data } = await this.api.delete(`/api/private/project/${id}`);\n\n    return data.message || {};\n  };\n\n  //Tasks\n  listAllTasksFromProject = async id => {\n    const { data } = await this.api.get(`/api/private/tasks/${id}`);\n\n    return data.tasks || {};\n  };\n\n  getTaskInfo = async id => {\n    const { data } = await this.api.get(`/api/private/task/${id}`);\n\n    return data.task || {};\n  };\n\n  createTask = async (id, values) => {\n    const { data } = await this.api.post(`/api/private/task/${id}`, values);\n\n    return data.task || {};\n  };\n\n  updateTask = async (id, values) => {\n    const { data } = await this.api.put(`/api/private/task/${id}`, values);\n\n    return data.task || {};\n  };\n\n  deleteTask = async id => {\n    const { data } = await this.api.delete(`/api/private/task/${id}`);\n\n    return data.message || {};\n  };\n}\n\nexport default new ApiService();\n","import React, { Component } from 'react';\nimport formloginSchema from './FormLogin.schema';\nimport { FormWrapper } from './FormLogin.style';\nimport { NewInput, Button } from '../../atoms';\nimport ApiService from '../../../api/Service';\n// import { Redirect } from 'react-router-dom';\n\nclass FormLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginApiErrorMessage: '',\n      initialState: {\n        username: '',\n        password: '',\n      },\n    };\n  }\n\n  onSubmitMethod = async (values, actions) => {\n    try {\n      const logged = await ApiService.loginUser(values);  \n\n      this.props.logUser();\n\n      localStorage.setItem('logged-user-info', JSON.stringify(logged));\n     actions.setSubmitting(false);\n\n      this.props.history.push('/edit');\n    } catch (err) {\n      this.setState({\n        loginApiErrorMessage: err.response.data.message\n      })\n    }\n  };\n\n  render() {\n    return (\n<FormWrapper\n      initialValues={this.state.initialState}\n      validationSchema={formloginSchema}\n      onSubmit={this.onSubmitMethod}\n      >\n      {({ handleSubmit, handleChange, handleBlur, isSubmitting, values, errors, touched, ...props }) => (\n\n        <form onSubmit={handleSubmit}>\n          <NewInput\n            {...props}\n            name=\"username\"\n            label=\"Usuário\"\n            placeholder=\"Insira seu nome de Usuário\"\n            isLoading={isSubmitting}\n            defaultValue={values.username}\n            value={values.username}\n            error={errors.username || (this.state.loginApiErrorMessage && true)}\n            touched={touched.username}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"password\"\n            label=\"Senha\"\n            type=\"password\"\n            placeholder=\"Insira sua senha\"\n            isLoading={isSubmitting}\n            initialValues={values.password}\n            value={values.password}\n            error={errors.password || this.state.loginApiErrorMessage}\n            touched={touched.password}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n          <Button type=\"submit\" isLoading={isSubmitting}>Entrar</Button>\n        </form>\n      )}\n      </FormWrapper>\n    )\n  }\n}\n\n\n// const FormLogin = ({logUser, ...props}) => {\n//   const [loginApiErrorMessage, setLoginApiErrorMessage] = useState('');\n//   const initialState = {\n//     username: '',\n//     password: '',\n//   };\n\n\n//   const onSubmitMethod = async (values, action) => {\n//     try {\n//       const logged = await ApiService.loginUser(values);\n\n//       logUser();\n\n//       localStorage.setItem('logged-user-info', JSON.stringify(logged));\n//       action.setSubmitting(false);\n\n//       props.history.push('/edit');\n//     } catch (err) {\n//       setLoginApiErrorMessage(err.response.data.message);\n//     }\n//   };\n\n//   return (\n//     <FormWrapper\n//       initialValues={initialState}\n//       validationSchema={formloginSchema}\n//       onSubmit={onSubmitMethod}\n//       render={({ handleSubmit, handleChange, handleBlur, isSubmitting, values, errors, touched, ...props }) => (\n\n//         <form onSubmit={handleSubmit}>\n//           <NewInput\n//             {...props}\n//             name=\"username\"\n//             label=\"Usuário\"\n//             placeholder=\"Insira seu nome de Usuário\"\n//             isLoading={isSubmitting}\n//             initialValues={values.username}\n//             value={values.username}\n//             error={errors.username || (loginApiErrorMessage && true)}\n//             touched={touched.username}\n//             handleChange={handleChange}\n//             handleBlur={handleBlur}\n//           />\n\n//           <NewInput\n//             {...props}\n//             name=\"password\"\n//             label=\"Senha\"\n//             type=\"password\"\n//             placeholder=\"Insira sua senha\"\n//             isLoading={isSubmitting}\n//             initialValues={values.password}\n//             value={values.password}\n//             error={errors.password || loginApiErrorMessage}\n//             touched={touched.password}\n//             handleChange={handleChange}\n//             handleBlur={handleBlur}\n//           />\n//           <Button type=\"submit\" isLoading={isSubmitting}>Entrar</Button>\n//         </form>\n//       )}\n//     />\n//   );\n// };\n\nexport default FormLogin;\n","import * as yup from 'yup';\n\nconst formsignupSchema = yup.object().shape({\n\n  name: yup.string()\n    .required('Campo obrigatório')\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(50, 'Máximo de 50 caracteres'),\n  username: yup.string()\n    .required('Campo obrigatório')\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(20, 'Máximo de 20 caracteres'),\n  email: yup.string()\n    .required('Campo obrigatório')\n    .email('Formato inválido'),\n  password: yup.string()\n    .required('Campo obrigatório')\n    .min(6, 'Mínimo de 6 caracteres')\n    .max(60, 'Máximo de 60 caracteres'),\n\n});\n\nexport default formsignupSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\nexport const FormWrapper = styled(Formik)``;\n\nexport default FormWrapper;\n","import React, { Component } from 'react';\nimport formsignupSchema from './FormSignup.schema';\nimport { FormWrapper } from './FormSignup.style';\nimport { NewInput, Button } from '../../atoms';\nimport ApiService from '../../../api/Service';\n// import { Redirect } from 'react-router-dom';\n\nclass FormSignup extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    initialState: {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n    },\n}\n}\n\n\n  onSubmitMethod = async (values, action) => {\n    \n     await ApiService.subscribeUser(values);\n     console.log(values);\n    action.setSubmitting(false);\n\n     this.props.history.push('/login');\n  };\n  render() {\n    return(\n<FormWrapper\n      initialValues={this.state.initialState}\n      validationSchema={formsignupSchema}\n      onSubmit={this.onSubmitMethod}\n      >\n{({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit, ...props }) => (\n              <form onSubmit={handleSubmit}>\n                <NewInput\n                  {...props}\n                  name=\"name\"\n                  label=\"Nome\"\n                  placeholder=\"Insira seu nome completo\"\n                  defaultValue={values.name}\n                  value={values.name}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                  isLoading={isSubmitting}\n                  error={errors.name}\n                  touched={touched.name}\n                  />\n\n          <NewInput\n            {...props}\n            name=\"username\"\n            label=\"Usuário\"\n            placeholder=\"Insira seu nome de Usuário\"\n            isLoading={isSubmitting}\n            value={values.username}\n            error={errors.username}\n            touched={touched.username}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Insira seu Email\"\n            isLoading={isSubmitting}\n            value={values.email}\n            error={errors.email}\n            touched={touched.email}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"password\"\n            label=\"Senha\"\n            type=\"password\"\n            placeholder=\"Insira sua senha\"\n            isLoading={isSubmitting}\n            value={values.password}\n            error={errors.password}\n            touched={touched.password}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n          <Button type=\"submit\" isLoading={isSubmitting}>Entrar</Button>\n        </form>\n      )}\n    </FormWrapper>\n    )\n  }\n}\n\nexport default FormSignup;\n// const FormSignup = (props) => {\n//   const initialState = {\n//     name: '',\n//     username: '',\n//     email: '',\n//     password: '',\n//   };\n\n//   const onSubmitMethod = async (values, actions) => {\n//     // console.log(values);\n//     await ApiService.subscribeUser(values);\n//     actions.setSubmitting(false);\n\n\n//     props.history.push('/login');\n\n//   };\n\n//   return (\n//     <FormWrapper\n//       initialValues={initialState}\n//       validationSchema={formsignupSchema}\n//       onSubmit={onSubmitMethod}\n//       render={({ handleSubmit, handleChange, handleBlur, isSubmitting, values, errors, touched, ...props }) => (\n//         <form onSubmit={handleSubmit}>\n//           <NewInput\n//             {...props}\n//             name=\"name\"\n//             label=\"Nome\"\n//             placeholder=\"Insira seu nome completo\"\n//             isLoading={isSubmitting}\n//             value={values.name}\n//             error={errors.name}\n//             touched={touched.name}\n//             handleChange={handleChange}\n//             handleBlur={handleBlur}\n//           />\n\n//           <NewInput\n//             {...props}\n//             name=\"username\"\n//             label=\"Usuário\"\n//             placeholder=\"Insira seu nome de Usuário\"\n//             isLoading={isSubmitting}\n//             value={values.username}\n//             error={errors.username}\n//             touched={touched.username}\n//             handleChange={handleChange}\n//             handleBlur={handleBlur}\n//           />\n\n//           <NewInput\n//             {...props}\n//             name=\"email\"\n//             label=\"Email\"\n//             placeholder=\"Insira seu Email\"\n//             isLoading={isSubmitting}\n//             value={values.email}\n//             error={errors.email}\n//             touched={touched.email}\n//             handleChange={handleChange}\n//             handleBlur={handleBlur}\n//           />\n\n//           <NewInput\n//             {...props}\n//             name=\"password\"\n//             label=\"Senha\"\n//             type=\"password\"\n//             placeholder=\"Insira sua senha\"\n//             isLoading={isSubmitting}\n//             value={values.password}\n//             error={errors.password}\n//             touched={touched.password}\n//             handleChange={handleChange}\n//             handleBlur={handleBlur}\n//           />\n//           <Button type=\"submit\" isLoading={isSubmitting}>Entrar</Button>\n//         </form>\n//       )}\n//     />\n//   );\n// };\n\n","import * as yup from 'yup';\n\nconst formeditSchema = yup.object().shape({\n\n  name: yup.string()\n    .required('Campo obrigatório')\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(50, 'Máximo de 50 caracteres'),\n  username: yup.string()\n    .required('Campo obrigatório')\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(20, 'Máximo de 20 caracteres'),\n  email: yup.string()\n    .required('Campo obrigatório')\n    .email('Formato inválido'),\n  currentPassword: yup.string()\n    .required('Campo obrigatório')\n    .min(6, 'Mínimo de 6 caracteres')\n    .max(60, 'Máximo de 60 caracteres'),\n  newPassword: yup.string()\n    .required('Campo obrigatório')\n    .min(6, 'Mínimo de 6 caracteres')\n    .max(60, 'Máximo de 60 caracteres'),\n  confirmationNewPassword: yup.string()\n    .required('Campo obrigatório')\n    .min(6, 'Mínimo de 6 caracteres')\n    .max(60, 'Máximo de 60 caracteres'),\n\n});\n\nexport default formeditSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\nexport const FormWrapper = styled(Formik)``;\n\nexport default FormWrapper;\n","import React, { Component } from 'react';\nimport formeditSchema from './FormEdit.schema';\nimport { FormWrapper } from './FormEdit.style';\nimport { NewInput, Button } from '../../atoms';\nimport  ApiService  from '../../../api/Service';\nimport { Skeleton } from 'antd';\n\nclass FormEdit extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isUserInfoLoaded: false,\n      initialState: {\n        name: '',\n        username: '',\n        email: '',\n        currentPassword: '',\n        newPassword: '',\n        confirmationNewPassword: '',\n      },\n    };\n  }\n  \n    async componentDidMount () {\n      const { name, username, email, currentPassword, newPassword, confirmationNewPassword } = await ApiService.getUserInfo();\n    this.setState({\n      initialState: {\n        name, username, email, currentPassword, newPassword, confirmationNewPassword,\n      },\n        isUserInfoLoaded: true,\n      });\n    }  \n\n    onSubmitMethod = async (values, actions) => {\n      \n      await ApiService.updateUserInfo(values);\n      \n      \n    };\n\n    render() {\n        return this.state.isUserInfoLoaded ? (\n          <FormWrapper\n            initialValues={this.state.initialState}\n            validationSchema={formeditSchema}\n            onSubmit={this.onSubmitMethod}\n            enableReinitialize\n          >\n            {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit, ...props }) => (\n              <form onSubmit={handleSubmit}>\n                <NewInput\n                  {...props}\n                  name=\"name\"\n                  label=\"Nome\"\n                  placeholder=\"Insira seu nome completo\"\n                  defaultValue={values.name}\n                  value={values.name}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                  isLoading={isSubmitting}\n                  error={errors.name}\n                  touched={touched.name}\n                  />\n\n                <NewInput\n                  {...props}\n                  name=\"username\"\n                  label=\"Usuário\"\n                  placeholder=\"Insira seu nome de Usuário\"\n                  defaultValue={values.username}\n                  value={values.username}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                  isLoading={isSubmitting}\n                  error={errors.username}\n                  touched={touched.username}\n                  />\n      \n                <NewInput\n                  {...props}\n                  name=\"email\"\n                  label=\"Email\"\n                  placeholder=\"Insira seu Email\"\n                  defaultValue={values.email}\n                  value={values.email}\n                  error={errors.email}\n                  touched={touched.email}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                  isLoading={isSubmitting}\n                />\n\n                <NewInput\n                  {...props}\n                  name=\"currentPassword\"\n                  label=\"Senha Atual\"\n                  type=\"password\"\n                  placeholder=\"Insira sua senha\"\n                  // defaultValue={values.currentPassword}\n                  value={values.currentPassword}\n                  error={errors.currentPassword}\n                  touched={touched.currentPassword}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                  isLoading={isSubmitting}\n                />\n\n                <NewInput\n                  {...props}\n                  name=\"newPassword\"\n                  label=\"Nova Senha\"\n                  type=\"password\"\n                  placeholder=\"Insira sua senha\"\n                  // defaultValue={values.newPassword}\n                  value={values.newPassword}\n                  error={errors.newPassword}\n                  touched={touched.newPassword}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                  isLoading={isSubmitting}\n                />\n\n                <NewInput\n                  {...props}\n                  name=\"confirmationNewPassword\"\n                  label=\"Confirmar Senha\"\n                  type=\"password\"\n                  placeholder=\"Insira sua senha\"\n                  // defaultValue={values.confirmationNewPassword}\n                  value={values.confirmationNewPassword}\n                  error={errors.confirmationNewPassword}\n                  touched={touched.confirmationNewPassword}\n                  handleChange={handleChange}\n                  handleBlur={handleBlur}\n                  isLoading={isSubmitting}\n                />\n      \n                <Button type=\"submit\" isLoading={isSubmitting}>Atualizar</Button>\n              </form>\n            )}\n          </FormWrapper>\n        ) : (\n          <Skeleton active/>\n        )\n      }\n    }\n    \n    export default FormEdit;\n    ","import * as yup from 'yup';\n\nconst formprojectcreateSchema = yup.object().shape({\n\n  title: yup.string()\n    .required('Campo obrigatório')\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(20, 'Máximo de 20 caracteres'),\n  description: yup.string()\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(50, 'Máximo de 50 caracteres'),\n  hourPrice: yup.number()\n    .required('Campo obrigatório'),\n  duration: yup.string()\n    .required('Campo obrigatório'),\n  cost: yup.number()\n    .required('Campo obrigatório'),\n  status: yup.string(), // .required('Campo obrigatório'),\n  creationDate: yup.date()\n    .required('Campo obrigatório'),\n  dueDate: yup.date()\n    .required('Campo obrigatório'),\n  // user: yup.string()\n  //   .required('Campo obrigatório'),\n});\n// type: mongoose.Types.ObjectId, ref: \"User\", required: true\nexport default formprojectcreateSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\n\n\nexport const FormWrapper = styled(Formik)``;\n\nexport default FormWrapper;\n","import React, { Component } from 'react';\nimport formprojectcreateSchema from './FormProjectCreate.schema';\nimport { FormWrapper } from './FormProjectCreate.style';\nimport { NewInput, Button, DatePicker, InputNumber, InputValor, Select} from '../../atoms';\nimport  ApiService  from '../../../api/Service';\nimport './FormProjectCreate.css';\n\n\nclass FormProjectCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: '',\n      initialState: {\n      title: '',\n      description: '',\n      hourPrice: '',\n      duration: '',\n      cost: '',\n      status: '',\n      creationDate: '',\n      dueDate: '',\n    },\n  };\n  }\n\n\ngetData = (values, data) => {\nthis.setState({status:data.value})\n  }\n\n  onSubmitMethod = async (values, actions) => {\n    console.log(actions);\n    const data = {...values, status:this.state.status}\n    await ApiService.createProject(data);\n \n    \n   actions.setSubmitting(false);\n\n    this.props.onCancel();\n  };\n\n\n  render() {\n    return(\n<FormWrapper\n      initialValues={this.state.initialState}\n      validationSchema={formprojectcreateSchema}\n      onSubmit={this.onSubmitMethod}\n      >\n      {({handleSubmit, handleChange, handleBlur, isSubmitting, values, errors, touched, value, ...props }) => (\n        <form onSubmit={handleSubmit}>\n          <div className=\"projectStyle\" >\n            <NewInput\n              {...props}\n              name=\"title\"\n              label=\"Título\"\n              placeholder=\"Insira o título do projeto\"\n              isLoading={isSubmitting}\n              value={values.title}\n              error={errors.title}\n              touched={touched.title}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n            />\n          </div>\n          <div>\n\n\n          </div>\n          <div className=\"projectStyleCol\">\n\n            <InputValor\n              {...props}\n              name=\"hourPrice\"\n              label=\"Preço Hora:\"\n              placeholder=\"Insira o valor da hora\"\n              isLoading={isSubmitting}\n              value={values.hourPrice}\n              error={errors.hourPrice}\n              touched={touched.hourPrice}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n            />\n\n            <InputNumber\n              {...props}\n              name=\"duration\"\n              label=\"Duração: \"\n              placeholder=\"Insira o tempo de duração do projeto\"\n              isLoading={isSubmitting}\n              value={values.duration}\n              error={errors.duration}\n              touched={touched.duration}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n            />\n\n            <InputValor\n              {...props}\n              name=\"cost\"\n              label=\"Custo do projeto:\"\n              placeholder=\"Insira o custo de execução do projeto\"\n              isLoading={isSubmitting}\n              value={values.cost}\n              error={errors.cost}\n              touched={touched.cost}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n            />\n\n          </div>\n\n          <div  className=\"projectStyleCol\" >  \n\n\n\n            <Select\n              {...props}\n              name=\"status\"\n              label=\"Status:\"\n              placeholder=\"Insira o valor\"\n              isLoading={isSubmitting}\n              value={values.status}\n              error={errors.status}\n              touched={touched.status}\n              defaultValue={values.status}\n              data={this.props.options}\n              handleChange={this.getData}\n            />\n\n            \n\n            <DatePicker\n              {...props}\n              label=\"Início de prazo:  \"\n              name=\"creationDate\"\n              placeholder=\"Insira a data\"\n              isLoading={isSubmitting}\n              value={values.creationDate}\n              error={errors.creationDate}\n              touched={touched.creationDate}\n              handleChange={handleChange}\n            />\n\n\n            <DatePicker\n              {...props}\n              name=\"dueDate\"\n              label=\"Fim do prazo:  \"\n              placeholder=\"Insira a data\"\n              isLoading={isSubmitting}\n              value={values.dueDate}\n              error={errors.dueDate}\n              touched={touched.dueDate}\n              handleChange={handleChange}\n            />\n            \n            \n          </div>\n          <div className=\"cadastrar\" >\n          <Button type=\"submit\" isLoading={isSubmitting}>Cadastrar</Button>\n          </div>\n        </form>\n      )}\n      </FormWrapper>\n    )\n  }\n}\nexport default FormProjectCreate;\n\n\n\n","import * as yup from 'yup';\n\nconst formprojecteditSchema = yup.object().shape({\n\n  title: yup.string()\n    .required('Campo obrigatório')\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(20, 'Máximo de 20 caracteres'),\n  description: yup.string()\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(50, 'Máximo de 50 caracteres'),\n  hourPrice: yup.number()\n    .required('Campo obrigatório'),\n  duration: yup.number()\n    .required('Campo obrigatório'),\n  cost: yup.number()\n    .required('Campo obrigatório'),\n  status: yup.string()\n    .required('Campo obrigatório'),\n  creationDate: yup.date()\n    .required('Campo obrigatório'),\n  dueDate: yup.date()\n    .required('Campo obrigatório'),\n});\n\nexport default formprojecteditSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\nexport const FormWrapper = styled(Formik)``;\n\nexport default FormWrapper;\n","import React, { Component } from 'react';\nimport formprojecteditSchema from './FormProjectEdit.schema';\nimport { FormWrapper } from './FormProjectEdit.style';\nimport { NewInput, Button } from '../../atoms';\nimport  ApiService  from '../../../api/Service'\nimport { Skeleton } from 'antd';\n\nclass FormProjectEdit extends Component {\n    state = {\n      isUserInfoLoaded: false,\n      initialState: {\n        title: '',\n        description: '',\n        hourPrice: '',\n        duration: '',\n        cost: '',\n        status: '',\n        creationDate: '',\n        dueDate: '',\n      },\n    }\n  \n    async componentDidMount () {\n      const {\n        title,\n        description,\n        hourPrice,\n        duration,\n        cost,\n        status,\n        creationDate,\n        dueDate\n      } = await ApiService.listAllProjects();\n\n    this.setState({\n        initialState: {\n            title, description, hourPrice, duration, cost, status, creationDate, dueDate\n        },\n        isUserInfoLoaded: true,\n      });\n    };\n\n    onSubmitMethod = async (values, actions) => {\n\n    };\n\n    render() {\n        return this.state.isUserInfoLoaded ? (\n          <FormWrapper\n            initialValues={this.state.initialState}\n            validationSchema={formprojecteditSchema}\n            onSubmit={this.onSubmitMethod}\n          >\n            {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit, ...props }) => (\n              <form onSubmit={handleSubmit}>\n              <div>\n              <NewInput\n            {...props}\n            name=\"title\"\n            label=\"Título\"\n            placeholder=\"Insira o título do projeto\"\n            isLoading={isSubmitting}\n            defaultValue={values.title}\n            value={values.title}\n            error={errors.title}\n            touched={touched.title}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"description\"\n            label=\"Descrição\"\n            placeholder=\"Insira descrição do projeto\"\n            isLoading={isSubmitting}\n            defaultValue={values.description}\n            value={values.description}\n            error={errors.description}\n            touched={touched.description}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"hourPrice\"\n            label=\"Preço por Hora trabalhada\"\n            placeholder=\"Insira o valor da hora trabalhada\"\n            isLoading={isSubmitting}\n            defaultValue={values.hourPrice}\n            value={values.hourPrice}\n            error={errors.hourPrice}\n            touched={touched.hourPrice}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"duration\"\n            label=\"Duração\"\n            placeholder=\"Insira o tempo de duração do projeto\"\n            isLoading={isSubmitting}\n            defaultValue={values.duration}\n            value={values.duration}\n            error={errors.duration}\n            touched={touched.duration}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"cost\"\n            label=\"Custo do projeto\"\n            placeholder=\"Insira o custo do projeto\"\n            isLoading={isSubmitting}\n            defaultValue={values.cost}\n            value={values.cost}\n            error={errors.cost}\n            touched={touched.cost}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"status\"\n            label=\"Status do projeto\"\n            placeholder=\"Insira o status do projeto\"\n            isLoading={isSubmitting}\n            defaultValue={values.status}\n            value={values.status}\n            error={errors.status}\n            touched={touched.status}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"creationDate\"\n            label=\"Data de criação\"\n            placeholder=\"Insira a data de criação do projeto\"\n            isLoading={isSubmitting}\n            defaultValue={values.creationDate}\n            value={values.creationDate}\n            error={errors.creationDate}\n            touched={touched.creationDate}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"dueDate\"\n            label=\"Data final\"\n            placeholder=\"Insira a data final do projeto\"\n            isLoading={isSubmitting}\n            defaultValue={values.dueDate}\n            value={values.dueDate}\n            error={errors.dueDate}\n            touched={touched.dueDate}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n      </div>\n                <Button type=\"submit\" isLoading={isSubmitting}>Atualizar</Button>\n              </form>\n            )}\n          </FormWrapper>\n        ) : (\n          <Skeleton active/>\n        )\n      }\n    }\n    \n    export default FormProjectEdit;\n    ","import React, { Component } from 'react';\nimport { Table, Modal } from '../../atoms';\nimport {Tag as Status, Space, Input, Button } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport FormProjectCreate from '../FormProjectCreate/FormProjectCreate';\nimport { Link } from 'react-router-dom';\nimport './ProjectView.css';\n\n\n\n\nclass ProjectView extends Component {\n  state = {\n    searchText: '',\n    searchedColumn: '',\n    loading: false,\n    visible: false,\n  };\n// Table Functions\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n// modal functions\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({ loading: false, visible: false });\n    }, 3000);\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n      render(){\n\n      const columns = [\n        {\n          title: 'Nome',\n          dataIndex: 'title',\n          key: '_id',\n          \n          ...this.getColumnSearchProps('title'),\n          render: (text,_id) =>\n          <Link data={_id._id} onClick={this.props.onClick}>\n          {console.log(_id._id)}\n          {text}\n          </Link>,\n        },\n        {\n          title: 'Data de criação',\n          dataIndex: 'creationDate',\n          key: 'creationDate',\n         \n        },\n        {\n          title: 'Status',\n          key: 'status',\n          dataIndex: 'status',\n          ...this.getColumnSearchProps('status'),\n          // render: status => (\n          //   <>\n          //     {status.map(status => {\n          //       let color = status.length > 5 ? 'geekblue' : 'green';\n          //       if (status === 'CANCELED') {\n          //         color = 'volcano';\n          //       } else if(status === 'BACKLOG'){\n          //         color = 'default'\n          //       }\n          //       return (\n          //         <Status color={color} key={status}>\n          //           {status}\n          //         </Status>\n          //       );\n          //     })}\n          //   </>\n          // ),\n        },\n        {\n          title: 'Horas Estimadas',\n          dataIndex: 'duration',\n          key: 'duration',\n        },\n        {\n          title: 'Horas Trabalhadas',\n          dataIndex: 'durationnow',\n          key: 'durationnow',\n        },\n        {\n          title: 'Prazo',\n          dataIndex: 'dueDate',\n          key: 'dueDate',\n        },\n        {\n          title: 'Ação',\n          key: 'action',\n          render: (text, record) => (\n            <Space size=\"middle\">\n            <Link to=\"/edit-project\">\n            <EditOutlined />\n            </Link>\n            <Link to=\"/edit-project\">\n            <DeleteOutlined />\n            </Link>\n            </Space>\n          ),\n        },\n      ];\n\n\n        return(\n\n<div>\n<div className=\"head\" >Seus Projetos</div>\n\n      <>\n      <div className=\"modalButton\" >\n          <Modal onCancel={this.handleCancel} showModal={this.showModal} handleOk={this.handleOk} onCancelVisible={this.state.visible}>\n            <FormProjectCreate onCancel={this.handleCancel} options={this.props.options}/>\n          </Modal>\n      </div>\n      \n        <Table columns={columns} projects={this.props.projects} onChange={this.handleChange} />\n      </>\n</div>\n        )\n    }\n}\n\nexport default ProjectView;","import * as yup from 'yup';\n\nconst formtaskcreateSchema = yup.object().shape({\n\n  title: yup.string()\n    .required('Campo obrigatório')\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(20, 'Máximo de 20 caracteres'),\n  description: yup.string()\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(50, 'Máximo de 50 caracteres'),\n  duration: yup.number()\n    .required('Campo obrigatório'),\n  cost: yup.number()\n    .required('Campo obrigatório'),\n  status: yup.string(),\n    // .required('Campo obrigatório'),\n  type: yup.string()\n    .required('Campo obrigatório'),\n  profitable: yup.boolean()\n    .required('Campo obrigatório'),\n  creationDate: yup.date()\n    .required('Campo obrigatório'),\n  dueDate: yup.date()\n    .required('Campo obrigatório'),\n\n});\nexport default formtaskcreateSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\n\nexport const FormWrapper = styled(Formik)``;\n\nexport default FormWrapper;\n","import React, { Component } from 'react';\nimport formtaskcreateSchema from './FormTaskCreate.schema';\nimport { FormWrapper } from './FormTaskCreate.style';\nimport { NewInput, Button, DatePicker, InputNumber, InputValor, Select } from '../../atoms';\nimport  ApiService  from '../../../api/Service';\nimport './FormTaskCreate.css';\n\nclass FormTaskCreate extends Component {\n  constructor(props) {\n    super(props);\n  this.state = {\n    status: '',\n    initialState: {\n      title: '',\n      description: '',\n      duration: '',\n      cost: '',\n      status: '',\n      type: '',\n      profitable: true,\n      creationDate: '',\n      dueDate: '',\n    },\n  };\n}\n\ngetData = (values, data) => {\n  console.log({data})\n  this.setState({status:data.value})\n    }\n  \n    onSubmitMethod = async (values, actions) => {\n      console.log(actions);\n      const id = this.props.project\n      console.log({id})\n      const data = {...values, status:this.state.status}\n      console.log({data})\n      await ApiService.createTask(id, data);\n      await this.props.loadTasks();\n      \n     actions.setSubmitting(false);\n  \n      this.props.onCancel();\n\n    };\n  \n\n  render() {\n    return(\n      <FormWrapper\n      initialValues={this.state.initialState}\n      validationSchema={formtaskcreateSchema}\n      onSubmit={this.onSubmitMethod}\n      enableReinitialize\n      >\n      {({ handleSubmit, handleChange, handleBlur, isSubmitting, values, errors, touched, value, ...props }) => (\n        \n        <form onSubmit={handleSubmit}>\n        {console.log({errors})}\n          <NewInput\n            {...props}\n            name=\"title\"\n            label=\"Título\"\n            placeholder=\"Insira o título do tarefa\"\n            isLoading={isSubmitting}\n            value={values.title}\n            error={errors.title}\n            touched={touched.title}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n        />\n\n\n          <NewInput\n            {...props}\n            style={{width:'100%', backgroundColor:'red !important'}}\n            name=\"description\"\n            label=\"Descrição\"\n            placeholder=\"Insira descrição do tarefa\"\n            isLoading={isSubmitting}\n            value={values.description}\n            error={errors.description}\n            touched={touched.description}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n         <InputNumber\n              {...props}\n              name=\"duration\"\n              label=\"Duração: \"\n              placeholder=\"Insira o tempo de duração do tarefa\"\n              isLoading={isSubmitting}\n              value={values.duration}\n              error={errors.duration}\n              touched={touched.duration}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n            />\n\n          <InputValor\n              {...props}\n              name=\"cost\"\n              label=\"Custo do tarefa:\"\n              placeholder=\"Insira o valor\"\n              isLoading={isSubmitting}\n              value={values.cost}\n              error={errors.cost}\n              touched={touched.cost}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n            />\n\n          <Select\n              {...props}\n              name=\"status\"\n              label=\"Status:\"\n              placeholder=\"Insira o valor\"\n              isLoading={isSubmitting}\n              value={values.status}\n              error={errors.status}\n              touched={touched.status}\n              defaultValue={values.status}\n              data={this.props.options}\n              handleChange={this.getData}\n            />\n\n          <NewInput\n            {...props}\n            name=\"type\"\n            label=\"Tipo\"\n            placeholder=\"Insira o tipo\"\n            isLoading={isSubmitting}\n            value={values.type}\n            error={errors.type}\n            touched={touched.type}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"profitable\"\n            label=\"Profitable\"\n            placeholder=\"\"\n            isLoading={isSubmitting}\n            value={values.profitable}\n            error={errors.profitable}\n            touched={touched.profitable}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n            <DatePicker\n              {...props}\n              label=\"Início de prazo:  \"\n              name=\"creationDate\"\n              placeholder=\"Insira a data\"\n              isLoading={isSubmitting}\n              value={values.creationDate}\n              error={errors.creationDate}\n              touched={touched.creationDate}\n              handleChange={handleChange}\n            />\n\n          \n            <DatePicker\n              {...props}\n              name=\"dueDate\"\n              label=\"Fim do prazo:  \"\n              placeholder=\"Insira a data\"\n              isLoading={isSubmitting}\n              value={values.dueDate}\n              error={errors.dueDate}\n              touched={touched.dueDate}\n              handleChange={handleChange}\n            /> \n\n<div className=\"cadastrar\" >\n          <Button type=\"submit\"  isLoading={isSubmitting}>Cadastrar</Button>\n          </div>\n        </form>\n      )}\n      </FormWrapper>\n    );\n  }\n}\nexport default FormTaskCreate;\n","import * as yup from 'yup';\n\nconst formtaskeditSchema = yup.object().shape({\n\n  title: yup.string()\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(20, 'Máximo de 20 caracteres'),\n  description: yup.string()\n    .min(4, 'Mínimo de 4 caracteres')\n    .max(50, 'Máximo de 50 caracteres'),\n  duration: yup.number(),\n  cost: yup.number(),\n  status: yup.string(),\n  type: yup.string(),\n  profitable: yup.boolean(),\n  creationDate: yup.date(),\n  dueDate: yup.date(),\n\n});\nexport default formtaskeditSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\n\n\nexport const FormWrapper = styled(Formik)``;\n\nexport default FormWrapper;","import React, { Component } from 'react';\nimport formtaskeditSchema from './FormTaskEdit.schema';\nimport { FormWrapper } from './FormTaskEdit.style';\nimport { NewInput, Button, DatePicker, InputNumber, InputValor, Select } from '../../atoms';\nimport  ApiService  from '../../../api/Service';\n// import './FormTaskCreate.css';\n\nclass FormTaskEdit extends Component {\n  constructor(props) {\n    super(props);\n  this.state = {\n    status: '',\n    initialState: {\n      title: '',\n      description: '',\n      duration: '',\n      cost: '',\n      status: '',\n      type: '',\n      profitable: true,\n      creationDate: '',\n      dueDate: '',\n    },\n  };\n}\n\ngetData = (values, data) => {\n  console.log({data})\n  this.setState({status:data.value})\n    }\n  \n    onSubmitMethod = async (values, actions) => {\n      console.log(actions);\n      const id = this.props.task_id\n      console.log({id})\n      const data = {...values, status:this.state.status}\n      console.log({data})\n      await ApiService.updateTask(id, data);\n      \n      \n     actions.setSubmitting(false);\n  \n      this.props.onCancel();\n\n    };\n  \n\n  render() {\n    return(\n      <FormWrapper\n      initialValues={this.state.initialState}\n      validationSchema={formtaskeditSchema}\n      onSubmit={this.onSubmitMethod}\n      enableReinitialize\n      >\n      {({ handleSubmit, handleChange, handleBlur, isSubmitting, values, errors, touched, value, ...props }) => (\n        \n        <form onSubmit={handleSubmit}>\n        {console.log({errors})}\n          <NewInput\n            {...props}\n            name=\"title\"\n            label=\"Título\"\n            placeholder=\"Insira o título do tarefa\"\n            isLoading={isSubmitting}\n            value={values.title}\n            error={errors.title}\n            touched={touched.title}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n        />\n\n\n          <NewInput\n            {...props}\n            style={{width:'100%', backgroundColor:'red !important'}}\n            name=\"description\"\n            label=\"Descrição\"\n            placeholder=\"Insira descrição do tarefa\"\n            isLoading={isSubmitting}\n            value={values.description}\n            error={errors.description}\n            touched={touched.description}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n         <InputNumber\n              {...props}\n              name=\"duration\"\n              label=\"Duração: \"\n              placeholder=\"Insira o tempo de duração do tarefa\"\n              isLoading={isSubmitting}\n              value={values.duration}\n              error={errors.duration}\n              touched={touched.duration}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n            />\n\n          <InputValor\n              {...props}\n              name=\"cost\"\n              label=\"Custo do tarefa:\"\n              placeholder=\"Insira o valor\"\n              isLoading={isSubmitting}\n              value={values.cost}\n              error={errors.cost}\n              touched={touched.cost}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n            />\n\n          <Select\n              {...props}\n              name=\"status\"\n              label=\"Status:\"\n              placeholder=\"Insira o valor\"\n              isLoading={isSubmitting}\n              value={values.status}\n              error={errors.status}\n              touched={touched.status}\n              defaultValue={values.status}\n              data={this.props.options}\n              handleChange={this.getData}\n            />\n\n          <NewInput\n            {...props}\n            name=\"type\"\n            label=\"Tipo\"\n            placeholder=\"Insira o tipo\"\n            isLoading={isSubmitting}\n            value={values.type}\n            error={errors.type}\n            touched={touched.type}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n          <NewInput\n            {...props}\n            name=\"profitable\"\n            label=\"Profitable\"\n            placeholder=\"????\"\n            isLoading={isSubmitting}\n            value={values.profitable}\n            error={errors.profitable}\n            touched={touched.profitable}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n          />\n\n            <DatePicker\n              {...props}\n              label=\"Início de prazo:  \"\n              name=\"creationDate\"\n              placeholder=\"Insira a data\"\n              isLoading={isSubmitting}\n              value={values.creationDate}\n              error={errors.creationDate}\n              touched={touched.creationDate}\n              handleChange={handleChange}\n            />\n\n          \n            <DatePicker\n              {...props}\n              name=\"dueDate\"\n              label=\"Fim do prazo:  \"\n              placeholder=\"Insira a data\"\n              isLoading={isSubmitting}\n              value={values.dueDate}\n              error={errors.dueDate}\n              touched={touched.dueDate}\n              handleChange={handleChange}\n            /> \n\n        <div className=\"Atualizar\" >\n          <Button type=\"submit\"  isLoading={isSubmitting}>Atualizar</Button>\n          </div>\n        </form>\n      )}\n      </FormWrapper>\n    );\n  }\n}\nexport default FormTaskEdit;\n","import React, { Component } from 'react';\nimport { TableTask, ModalTask, ModalEditTask } from '../../atoms';\nimport {Tag as Status, Space, Input, Button } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport {FormTaskEdit, FormTaskCreate} from '../../molecules';\nimport ApiService from '../../../api/Service';\nimport { Link } from 'react-router-dom';\nimport './TaskView.css';\n\n\n\n\nclass TaskView extends Component {\n  state = {\n    searchText: '',\n    searchedColumn: '',\n    loading: false,\n    visible: false,\n    task_id:'',\n    showEditTask: false,\n  };\n// Table Functions\ngetColumnSearchProps = dataIndex => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        ref={node => {\n          this.searchInput = node;\n        }}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        style={{ width: 188, marginBottom: 8, display: 'block' }}\n      />\n      <Space>\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </Space>\n    </div>\n  ),\n  filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n  onFilter: (value, record) =>\n    record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n  onFilterDropdownVisibleChange: visible => {\n    if (visible) {\n      setTimeout(() => this.searchInput.select());\n    }\n  },\n  render: text =>\n    this.state.searchedColumn === dataIndex ? (\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[this.state.searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n    ) : (\n      text\n    ),\n});\n\nhandleSearch = (selectedKeys, confirm, dataIndex) => {\n  confirm();\n  this.setState({\n    searchText: selectedKeys[0],\n    searchedColumn: dataIndex,\n  });\n};\n\nhandleReset = clearFilters => {\n  clearFilters();\n  this.setState({ searchText: '' });\n};\n// modal functions\nshowModal = () => {\n  this.setState({\n    visible: true,\n  });\n};\n\nhandleOk = () => {\n  this.setState({ loading: true });\n  setTimeout(() => {\n    this.setState({ loading: false, visible: false });\n  }, 3000);\n};\n\nhandleCancel = () => {\n  this.setState({ visible: false });\n};\ndeleteTask = async e => {\n  const id = e.target.attributes.data.value;\n  await ApiService.deleteTask(id)\n}\neditTask = async e => {\n  const id = e.target.attributes.data.value;\n  this.setState({task_id:id, showEditTask: true})\n}\ncloseEditTask = () => {\n  this.setState({showEditTask: !this.state.showEditTask})\n}\n\n      render(){\n\n      const columns = [\n        {\n          title: 'Tarefas',\n          dataIndex: 'title',\n          key: 'title',\n          ...this.getColumnSearchProps('title'),\n          render: text =>\n          <Link to=\"/edit-task\">\n          {text}\n          </Link>\n        },\n        {\n          title: 'Data de criação',\n          dataIndex: 'creationDate',\n          key: 'creationDate',\n        },\n        {\n          title: 'Status',\n          key: 'status',\n          dataIndex: 'status',\n          ...this.getColumnSearchProps('status'),\n          // render: status => (\n          //   <>\n          //     {status.map(status => {\n          //       let color = status.length > 5 ? 'geekblue' : 'green';\n          //       if (status === 'CANCELED') {\n          //         color = 'volcano';\n          //       } else if(status === 'BACKLOG'){\n          //         color = 'default'\n          //       }\n          //       return (\n          //         <Status color={color} key={status}>\n          //           {status}\n          //         </Status>\n          //       );\n          //     })}\n          //   </>\n          // ),\n        },\n        {\n          title: 'Horas Estimadas',\n          dataIndex: 'duration',\n          key: 'duration',\n        },\n        {\n          title: 'Horas Trabalhadas',\n          dataIndex: 'durationnow',\n          key: 'durationnow',\n        },\n        {\n          title: 'Prazo',\n          dataIndex: 'dueDate',\n          key: 'dueDate',\n        },\n        {\n          title: 'Ação',\n          key: 'action',\n          render: (text, record) => (\n            \n            <Space size=\"middle\" data={record._id}>\n            <Link onClick={this.editTask} data={record._id} >\n            {console.log({id:record._id})}\n            <h2 data={record._id}  >Edit</h2>\n            </Link>\n            <Link onClick={this.deleteTask}  data={record._id}>\n            <h2 data={record._id}  >Del</h2>\n            </Link>\n            </Space>\n          ),\n        },\n      ];\n\n\n\n        return(\n<div>\n<div className=\"head\" >suas tasks</div>\n\n      <>\n      <div className=\"modalButton\" >\n      {this.state.showEditTask && <ModalEditTask onCancelVisible={this.state.showEditTask} onCancel={this.closeEditTask}> <FormTaskEdit task_id={this.state.task_id} onCancel={this.closeEditTask} options={this.props.options} /></ModalEditTask>}\n        <ModalTask onCancel={this.handleCancel} showModal={this.showModal} handleOk={this.handleOk} onCancelVisible={this.state.visible}>\n       \n          <FormTaskCreate onCancel={this.handleCancel} project={this.props.project} options={this.props.options} loadTasks={this.props.loadTasks} />\n        </ModalTask>\n      </div>\n      <TableTask columns={columns} tasks={this.props.tasks} onChange={this.handleChange} />\n      </>\n\n</div>\n        )\n    }\n}\n\nexport default TaskView;","import React, { Component } from 'react';\nimport { MasterTemplate } from '../../templates';\nimport { FormLogin } from '../../components/molecules';\n\nclass Login extends Component {\n  render() {\n    return (\n      <MasterTemplate loggedUser={this.props.loggedUser} {...this.props}>\n      <FormLogin {...this.props} />\n    </MasterTemplate>\n    )\n  }\n}\n\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { MasterTemplate } from '../../templates';\nimport { HomeView } from  '../../components/molecules/'\n\nclass Home extends Component {\n  render() {\n    return (\n      <MasterTemplate loggedUser={this.props.loggedUser} {...this.props}>\n      <HomeView/>\n     </MasterTemplate>\n    )\n  }\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { MasterTemplate } from '../../templates';\nimport { FormSignup } from '../../components/molecules';\n\n\nclass Signup extends Component {\n  render() {\n    return (\n      <MasterTemplate loggedUser={this.props.loggedUser} {...this.props}>\n        <FormSignup {...this.props} />\n      </MasterTemplate>\n    );\n  }\n}\n\n\nexport default Signup;\n","import React, { Component } from 'react';\n// import { Redirect } from 'react-router-dom';\nimport { MasterTemplate } from '../../templates';\nimport { FormEdit } from '../../components/molecules';\n\nclass Edit extends Component {\n\n  render(){\n    \n    return (\n\n      <MasterTemplate loggedUser={this.props.loggedUser} {...this.props}>\n        <FormEdit userInfo={this.props.userInfo} {...this.props} />\n      </MasterTemplate>\n    );\n  }\n}\n\n\nexport default Edit;\n","import React, { Component } from 'react';\nimport { MasterTemplate } from '../../templates';\nimport { FormProjectEdit } from '../../components/molecules';\n\n\nclass ProjectEdit extends Component {\n  render() {\n    return(\n      <MasterTemplate loggedUser={this.props.loggedUser} {...this.props}>\n      <FormProjectEdit {...this.props} />\n    </MasterTemplate>\n    );\n  }\n}\n\n\nexport default ProjectEdit;\n","import React, { Component } from 'react';\nimport { MasterTemplate } from '../../templates';\nimport { ProjectView } from  '../../components/molecules/'\nimport ApiService from '../../api/Service';\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects:[],\n      options:[],\n    };\n\n  }\n\n  onClick = async e => {\n    const { projects } = this.state;\n    const id = e.target.attributes.data.value;\n\n    const projectInfos = await this.getProjectInfos(projects, id);\n    \nconsole.log({projectInfos})\n    this.props.history.push({\n      pathname: \"/task\",\n      state: {\n        projectInfos\n      }\n    });\n\n  };\n\n  getProjectInfos = async (projects, id) => {\n    const project = await projects.filter(item => item._id.includes(id));\n    const tasks = await ApiService.listAllTasksFromProject(id);\n\n    return { ...project[0], tasks };\n  };\n\n  loadOptions = () => {\n    console.log(\"ENTROU!!!!!!\")\n   const options = [{value:\"BACKLOG\", displayValue:\"BACKLOG\"}, {value:\"ONGOING\",displayValue:\"ONGOING\"}, {value:\"DONE\", displayValue:\"DONE\"}, {value:\"CANCELED\", displayValue:\"CANCELED\"}] \n \n   this.setState({\n     options\n   })\n  }\n\n\n\n  loadProjects = () => {\n    console.log(\"Este é o loadProjects\")\n    const projects = [\n \n    ];\n   this.setState({\n     projects\n   })\n  }\n  componentDidMount = async () => {\n    const projects = await ApiService.listAllProjects();\n\n    this.setState({ projects });\n\n    await this.loadOptions()  \n    }\n\n  render() {\n    return (\n      <MasterTemplate  loggedUser={this.props.loggedUser} {...this.props}>\n      <ProjectView  projects={this.state.projects} onClick={this.onClick} options={this.state.options} />\n     </MasterTemplate>\n    )\n  }\n};\n\nexport default Project;","import React, { Component } from 'react';\nimport { MasterTemplate } from '../../templates';\nimport { FormTaskEdit } from '../../components/molecules';\n\nclass TaskEdit extends Component {\n  render() {\n    return (\n      <MasterTemplate loggedUser={this.props.loggedUser} {...this.props}>\n      <FormTaskEdit {...this.props} />\n    </MasterTemplate>\n    )\n  }\n}\n\n\n\nexport default TaskEdit;\n","import React, { Component } from 'react';\nimport { MasterTemplate } from '../../templates';\nimport { TaskView } from  '../../components/molecules/'\n\nclass Task extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks:[],\n      options:[],\n      project:'',\n    };\n\n  }\n\n  loadOptions = () => {\n    console.log(\"ENTROU!!!!!!\")\n   const options = [{value:\"Backlog\", displayValue:\"Backlog\"}, {value:\"OnGoing\",displayValue:\"OnGoing\"}, {value:\"Done\", displayValue:\"Done\"}];\n \n   this.setState({\n     options\n   })\n  }\n\n\n\n  loadTasks = () => {\nconst tasks = this.props.history.location.state.projectInfos.tasks\nconst project = this.props.history.location.state.projectInfos._id\nconsole.log({tasks, project})\n   this.setState({\n     tasks,\n     project\n   })\n  }\n  componentDidMount = async () => {\n    await this.loadOptions()\n    await this.loadTasks()\n    }\n\n  render() {\n\n    return (\n      <MasterTemplate  loggedUser={this.props.loggedUser} {...this.props}>\n      <TaskView  tasks={this.state.tasks} options={this.state.options} project={this.state.project} loadTasks={this.loadTasks} />\n     </MasterTemplate>\n    )\n  }\n};\n\nexport default Task;","import React, { Component } from 'react';\nimport { Text } from '../../atoms';\n\nclass DashboardView extends Component {\n    state = {\n        \n    }\n    render(){\n        return(\n<Text>Dashboard View</Text>\n        )\n    }\n}\n\nexport default DashboardView;","import React, { Component } from \"react\";\nimport { MasterTemplate } from \"../../templates\";\nimport DashboardView from \"../../components/organisms/DashboardView/DashboardView\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <MasterTemplate loggedUser={this.props.loggedUser} {...this.props}>\n        <DashboardView />\n      </MasterTemplate>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { Home, Login, Signup, Edit, Project, ProjectEdit, Task, TaskEdit, Dashboard} from './pages';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfo: {},\n      loggedUser: false,\n    };\n    this.verifyLoggedUser();\n  }\n\n  verifyLoggedUser = async () => {\n    const loggedUserInfo = localStorage.getItem('logged-user-info');\n\n    if (loggedUserInfo) {\n      this.state.loggedUser = true;\n    }\n  };\n\n\n  logUser = () => {\n    this.setState({\n      loggedUser: true,\n    });\n  }\n\n  logout = () => {\n    localStorage.removeItem(\"logged-user-info\");\n  \n    this.setState({\n      loggedUser: false,\n    });\n  \n    return;\n  }\n\n  \nonChange = (value) => {\n  console.log(`selected ${value}`);\n}\n\n\n\n\n\n  render() {\n    return (\n    <BrowserRouter>\n      \n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props =>  <Login logout={this.logout} loggedUser={this.state.loggedUser} {...props} \n            logUser={this.logUser} />}\n            />\n          <Route\n            exact\n            path=\"/signup\"\n            render={props => <Signup logout={this.logout} loggedUser={this.state.loggedUser} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={props => <Login logout={this.logout} loggedUser={this.state.loggedUser} {...props} \n            logUser={this.logUser} />}\n          />\n\n          <Route\n            exact\n            path=\"/edit\"\n            render={props => <Edit logout={this.logout} loggedUser={this.state.loggedUser} userInfo={this.state.userInfo} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/project\"\n            render={props => <Project logout={this.logout} loggedUser={this.state.loggedUser} userInfo={this.state.userInfo}  {...props} />}\n          />\n          {/* <Route\n            exact\n            path=\"/create-project\"\n            render={props => <ProjectCreate logout={this.logout} loggedUser={this.state.loggedUser} userInfo={this.state.userInfo} {...props} />}\n          /> */}\n          <Route\n            exact\n            path=\"/edit-project\"\n            render={props => <ProjectEdit logout={this.logout} loggedUser={this.state.loggedUser} userInfo={this.state.userInfo} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/task\"\n            render={props => <Task logout={this.logout} loggedUser={this.state.loggedUser} userInfo={this.state.userInfo} {...props} />}\n          />\n          {/* <Route\n            exact\n            path=\"/create-task\"\n            render={props => <TaskCreate logout={this.logout} loggedUser={this.state.loggedUser} userInfo={this.state.userInfo} {...props} />}\n          /> */}\n\n          <Route\n            exact\n            path=\"/edit-task\"\n            render={props => <TaskEdit logout={this.logout} loggedUser={this.state.loggedUser} userInfo={this.state.userInfo} {...props} />}\n          />\n\n          <Route\n            exact\n            path=\"/dashboard\"\n            render={props => <Dashboard logout={this.logout} loggedUser={this.state.loggedUser} userInfo={this.state.userInfo} {...props} />}\n          />\n          <Redirect to=\"/\"/>\n        </Switch>\n      \n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}